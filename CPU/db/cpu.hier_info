|cpu
from_memory[0] => data_path:U2.from_memory[0]
from_memory[1] => data_path:U2.from_memory[1]
from_memory[2] => data_path:U2.from_memory[2]
from_memory[3] => data_path:U2.from_memory[3]
from_memory[4] => data_path:U2.from_memory[4]
from_memory[5] => data_path:U2.from_memory[5]
from_memory[6] => data_path:U2.from_memory[6]
from_memory[7] => data_path:U2.from_memory[7]
clock => control_unit:U1.clock
clock => data_path:U2.clock
reset => control_unit:U1.reset
reset => data_path:U2.reset
to_memory[0] << data_path:U2.to_memory[0]
to_memory[1] << data_path:U2.to_memory[1]
to_memory[2] << data_path:U2.to_memory[2]
to_memory[3] << data_path:U2.to_memory[3]
to_memory[4] << data_path:U2.to_memory[4]
to_memory[5] << data_path:U2.to_memory[5]
to_memory[6] << data_path:U2.to_memory[6]
to_memory[7] << data_path:U2.to_memory[7]
address[0] << data_path:U2.address[0]
address[1] << data_path:U2.address[1]
address[2] << data_path:U2.address[2]
address[3] << data_path:U2.address[3]
address[4] << data_path:U2.address[4]
address[5] << data_path:U2.address[5]
address[6] << data_path:U2.address[6]
address[7] << data_path:U2.address[7]
writen << control_unit:U1.writen


|cpu|control_unit:U1
IR[0] => ~NO_FANOUT~
IR[1] => ~NO_FANOUT~
IR[2] => ~NO_FANOUT~
IR[3] => ~NO_FANOUT~
IR[4] => ~NO_FANOUT~
IR[5] => ~NO_FANOUT~
IR[6] => ~NO_FANOUT~
IR[7] => ~NO_FANOUT~
CCR_Result[0] => ~NO_FANOUT~
CCR_Result[1] => ~NO_FANOUT~
CCR_Result[2] => ~NO_FANOUT~
CCR_Result[3] => ~NO_FANOUT~
clock => current_state~1.DATAIN
reset => current_state~3.DATAIN
Bus1_Sel[0] <= <GND>
Bus1_Sel[1] <= <GND>
Bus2_Sel[0] <= Bus2_Sel[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
Bus2_Sel[1] <= <GND>
ALU_Sel[0] <= <GND>
ALU_Sel[1] <= <GND>
ALU_Sel[2] <= <GND>
IR_Load <= <GND>
MAR_Load <= MAR_Load$latch.DB_MAX_OUTPUT_PORT_TYPE
PC_Load <= <GND>
PC_Inc <= PC_Inc$latch.DB_MAX_OUTPUT_PORT_TYPE
A_Load <= <GND>
B_Load <= <GND>
CCR_Load <= <GND>
writen <= <GND>


|cpu|data_path:U2
from_memory[0] => Mux15.IN1
from_memory[1] => Mux14.IN1
from_memory[2] => Mux13.IN1
from_memory[3] => Mux12.IN1
from_memory[4] => Mux11.IN1
from_memory[5] => Mux10.IN1
from_memory[6] => Mux9.IN1
from_memory[7] => Mux8.IN1
Bus1_Sel[0] => Mux0.IN2
Bus1_Sel[0] => Mux1.IN2
Bus1_Sel[0] => Mux2.IN2
Bus1_Sel[0] => Mux3.IN2
Bus1_Sel[0] => Mux4.IN2
Bus1_Sel[0] => Mux5.IN2
Bus1_Sel[0] => Mux6.IN2
Bus1_Sel[0] => Mux7.IN2
Bus1_Sel[1] => Mux0.IN1
Bus1_Sel[1] => Mux1.IN1
Bus1_Sel[1] => Mux2.IN1
Bus1_Sel[1] => Mux3.IN1
Bus1_Sel[1] => Mux4.IN1
Bus1_Sel[1] => Mux5.IN1
Bus1_Sel[1] => Mux6.IN1
Bus1_Sel[1] => Mux7.IN1
Bus2_Sel[0] => Mux8.IN3
Bus2_Sel[0] => Mux9.IN3
Bus2_Sel[0] => Mux10.IN3
Bus2_Sel[0] => Mux11.IN3
Bus2_Sel[0] => Mux12.IN3
Bus2_Sel[0] => Mux13.IN3
Bus2_Sel[0] => Mux14.IN3
Bus2_Sel[0] => Mux15.IN3
Bus2_Sel[1] => Mux8.IN2
Bus2_Sel[1] => Mux9.IN2
Bus2_Sel[1] => Mux10.IN2
Bus2_Sel[1] => Mux11.IN2
Bus2_Sel[1] => Mux12.IN2
Bus2_Sel[1] => Mux13.IN2
Bus2_Sel[1] => Mux14.IN2
Bus2_Sel[1] => Mux15.IN2
clock => CCR_Result[0]~reg0.CLK
clock => CCR_Result[1]~reg0.CLK
clock => CCR_Result[2]~reg0.CLK
clock => CCR_Result[3]~reg0.CLK
clock => B[0].CLK
clock => B[1].CLK
clock => B[2].CLK
clock => B[3].CLK
clock => B[4].CLK
clock => B[5].CLK
clock => B[6].CLK
clock => B[7].CLK
clock => A[0].CLK
clock => A[1].CLK
clock => A[2].CLK
clock => A[3].CLK
clock => A[4].CLK
clock => A[5].CLK
clock => A[6].CLK
clock => A[7].CLK
clock => PC_uns[0].CLK
clock => PC_uns[1].CLK
clock => PC_uns[2].CLK
clock => PC_uns[3].CLK
clock => PC_uns[4].CLK
clock => PC_uns[5].CLK
clock => PC_uns[6].CLK
clock => PC_uns[7].CLK
clock => MAR[0].CLK
clock => MAR[1].CLK
clock => MAR[2].CLK
clock => MAR[3].CLK
clock => MAR[4].CLK
clock => MAR[5].CLK
clock => MAR[6].CLK
clock => MAR[7].CLK
clock => IR[0]~reg0.CLK
clock => IR[1]~reg0.CLK
clock => IR[2]~reg0.CLK
clock => IR[3]~reg0.CLK
clock => IR[4]~reg0.CLK
clock => IR[5]~reg0.CLK
clock => IR[6]~reg0.CLK
clock => IR[7]~reg0.CLK
reset => MAR[0].ACLR
reset => MAR[1].ACLR
reset => MAR[2].ACLR
reset => MAR[3].ACLR
reset => MAR[4].ACLR
reset => MAR[5].ACLR
reset => MAR[6].ACLR
reset => MAR[7].ACLR
reset => IR[0]~reg0.ACLR
reset => IR[1]~reg0.ACLR
reset => IR[2]~reg0.ACLR
reset => IR[3]~reg0.ACLR
reset => IR[4]~reg0.ACLR
reset => IR[5]~reg0.ACLR
reset => IR[6]~reg0.ACLR
reset => IR[7]~reg0.ACLR
reset => CCR_Result[0]~reg0.ACLR
reset => CCR_Result[1]~reg0.ACLR
reset => CCR_Result[2]~reg0.ACLR
reset => CCR_Result[3]~reg0.ACLR
reset => PC_uns[0].ACLR
reset => PC_uns[1].ACLR
reset => PC_uns[2].ACLR
reset => PC_uns[3].ACLR
reset => PC_uns[4].ACLR
reset => PC_uns[5].ACLR
reset => PC_uns[6].ACLR
reset => PC_uns[7].ACLR
reset => A[0].ACLR
reset => A[1].ACLR
reset => A[2].ACLR
reset => A[3].ACLR
reset => A[4].ACLR
reset => A[5].ACLR
reset => A[6].ACLR
reset => A[7].ACLR
reset => B[0].ACLR
reset => B[1].ACLR
reset => B[2].ACLR
reset => B[3].ACLR
reset => B[4].ACLR
reset => B[5].ACLR
reset => B[6].ACLR
reset => B[7].ACLR
IR_Load => IR[7]~reg0.ENA
IR_Load => IR[6]~reg0.ENA
IR_Load => IR[5]~reg0.ENA
IR_Load => IR[4]~reg0.ENA
IR_Load => IR[3]~reg0.ENA
IR_Load => IR[2]~reg0.ENA
IR_Load => IR[1]~reg0.ENA
IR_Load => IR[0]~reg0.ENA
MAR_Load => MAR[7].ENA
MAR_Load => MAR[6].ENA
MAR_Load => MAR[5].ENA
MAR_Load => MAR[4].ENA
MAR_Load => MAR[3].ENA
MAR_Load => MAR[2].ENA
MAR_Load => MAR[1].ENA
MAR_Load => MAR[0].ENA
PC_Load => PC_uns.OUTPUTSELECT
PC_Load => PC_uns.OUTPUTSELECT
PC_Load => PC_uns.OUTPUTSELECT
PC_Load => PC_uns.OUTPUTSELECT
PC_Load => PC_uns.OUTPUTSELECT
PC_Load => PC_uns.OUTPUTSELECT
PC_Load => PC_uns.OUTPUTSELECT
PC_Load => PC_uns.OUTPUTSELECT
PC_Inc => PC_uns.OUTPUTSELECT
PC_Inc => PC_uns.OUTPUTSELECT
PC_Inc => PC_uns.OUTPUTSELECT
PC_Inc => PC_uns.OUTPUTSELECT
PC_Inc => PC_uns.OUTPUTSELECT
PC_Inc => PC_uns.OUTPUTSELECT
PC_Inc => PC_uns.OUTPUTSELECT
PC_Inc => PC_uns.OUTPUTSELECT
A_Load => A[7].ENA
A_Load => A[6].ENA
A_Load => A[5].ENA
A_Load => A[4].ENA
A_Load => A[3].ENA
A_Load => A[2].ENA
A_Load => A[1].ENA
A_Load => A[0].ENA
B_Load => B[7].ENA
B_Load => B[6].ENA
B_Load => B[5].ENA
B_Load => B[4].ENA
B_Load => B[3].ENA
B_Load => B[2].ENA
B_Load => B[1].ENA
B_Load => B[0].ENA
CCR_Load => CCR_Result[3]~reg0.ENA
CCR_Load => CCR_Result[2]~reg0.ENA
CCR_Load => CCR_Result[1]~reg0.ENA
CCR_Load => CCR_Result[0]~reg0.ENA
ALU_Sel[0] => alu:U1.Sel[0]
ALU_Sel[1] => alu:U1.Sel[1]
ALU_Sel[2] => alu:U1.Sel[2]
to_memory[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
to_memory[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
to_memory[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
to_memory[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
to_memory[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
to_memory[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
to_memory[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
to_memory[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
address[0] <= MAR[0].DB_MAX_OUTPUT_PORT_TYPE
address[1] <= MAR[1].DB_MAX_OUTPUT_PORT_TYPE
address[2] <= MAR[2].DB_MAX_OUTPUT_PORT_TYPE
address[3] <= MAR[3].DB_MAX_OUTPUT_PORT_TYPE
address[4] <= MAR[4].DB_MAX_OUTPUT_PORT_TYPE
address[5] <= MAR[5].DB_MAX_OUTPUT_PORT_TYPE
address[6] <= MAR[6].DB_MAX_OUTPUT_PORT_TYPE
address[7] <= MAR[7].DB_MAX_OUTPUT_PORT_TYPE
IR[0] <= IR[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
IR[1] <= IR[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
IR[2] <= IR[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
IR[3] <= IR[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
IR[4] <= IR[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
IR[5] <= IR[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
IR[6] <= IR[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
IR[7] <= IR[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
CCR_Result[0] <= CCR_Result[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
CCR_Result[1] <= CCR_Result[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
CCR_Result[2] <= CCR_Result[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
CCR_Result[3] <= CCR_Result[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|cpu|data_path:U2|alu:U1
A[0] => Add0.IN8
A[0] => Add1.IN16
A[1] => Add0.IN7
A[1] => Add1.IN15
A[2] => Add0.IN6
A[2] => Add1.IN14
A[3] => Add0.IN5
A[3] => Add1.IN13
A[4] => Add0.IN4
A[4] => Add1.IN12
A[5] => Add0.IN3
A[5] => Add1.IN11
A[6] => Add0.IN2
A[6] => Add1.IN10
A[7] => Add0.IN1
A[7] => Add1.IN9
A[7] => ALU_PROCESS.IN0
A[7] => ALU_PROCESS.IN0
B[0] => Add0.IN16
B[0] => Add1.IN8
B[1] => Add0.IN15
B[1] => Add1.IN7
B[2] => Add0.IN14
B[2] => Add1.IN6
B[3] => Add0.IN13
B[3] => Add1.IN5
B[4] => Add0.IN12
B[4] => Add1.IN4
B[5] => Add0.IN11
B[5] => Add1.IN3
B[6] => Add0.IN10
B[6] => Add1.IN2
B[7] => Add0.IN9
B[7] => ALU_PROCESS.IN1
B[7] => Add1.IN1
B[7] => ALU_PROCESS.IN1
Sel[0] => Equal0.IN2
Sel[0] => Equal2.IN1
Sel[1] => Equal0.IN1
Sel[1] => Equal2.IN2
Sel[2] => Equal0.IN0
Sel[2] => Equal2.IN0
Result[0] <= Result[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
Result[1] <= Result[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
Result[2] <= Result[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
Result[3] <= Result[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
Result[4] <= Result[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
Result[5] <= Result[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
Result[6] <= Result[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
Result[7] <= Result[7]$latch.DB_MAX_OUTPUT_PORT_TYPE
NZVC[0] <= NZVC[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
NZVC[1] <= NZVC[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
NZVC[2] <= NZVC[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
NZVC[3] <= NZVC[3]$latch.DB_MAX_OUTPUT_PORT_TYPE


